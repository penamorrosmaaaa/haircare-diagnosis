{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpenamorros/franciscoiglesias.cuestionario/src/components/AIRecommender.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AIRecommender({\n  formData\n}) {\n  _s();\n  const [recommendation, setRecommendation] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // WARNING: This is a fake key for demo. Do NOT expose real keys.\n  const OPENAI_API_KEY = \"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\";\n  const getRecommendation = async () => {\n    setLoading(true);\n    setRecommendation('');\n\n    // Build your user prompt\n    const userSpecificPrompt = `\nActúa como un experto en cuidado capilar.\nTenemos varios productos (Mascarilla Hidratante, Aceite Amplificador, Shampoo Equilibrium, etc.).\nEl usuario tiene:\n  - Tipo de cabello: ${formData.tipoCabello}\n  - Condición general: ${formData.condicionGeneral}\n  - Frecuencia de lavado: ${formData.frecuenciaLavado}\n  (y más datos si necesitas)\n\nBasado en esta info, dame la recomendación más adecuada en 2-3 oraciones.\nExplica brevemente por qué esos productos se ajustan a su perfil.\n    `;\n    try {\n      var _data$choices, _data$choices$, _data$choices$$messag;\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${OPENAI_API_KEY}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [{\n            role: 'system',\n            content: 'Eres un experto asesor de cuidado capilar. Responde de manera clara y breve.'\n          }, {\n            role: 'user',\n            content: userSpecificPrompt\n          }],\n          max_tokens: 200,\n          temperature: 0.7\n        })\n      });\n      const data = await response.json();\n      const aiText = (data === null || data === void 0 ? void 0 : (_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || \"No recommendation found.\";\n      setRecommendation(aiText);\n    } catch (error) {\n      console.error(error);\n      setRecommendation(\"Error generando la recomendación.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRecommendation,\n      children: \"Obtener Recomendaci\\xF3n IA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }, this), recommendation && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recomendaci\\xF3n IA:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recommendation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(AIRecommender, \"d1lNFliaBpcbQiP5ygvSD0jsgtk=\");\n_c = AIRecommender;\nexport default AIRecommender;\nvar _c;\n$RefreshReg$(_c, \"AIRecommender\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AIRecommender","formData","_s","recommendation","setRecommendation","loading","setLoading","OPENAI_API_KEY","getRecommendation","userSpecificPrompt","tipoCabello","condicionGeneral","frecuenciaLavado","_data$choices","_data$choices$","_data$choices$$messag","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","max_tokens","temperature","data","json","aiText","choices","message","error","console","style","marginTop","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/manuelpenamorros/franciscoiglesias.cuestionario/src/components/AIRecommender.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction AIRecommender({ formData }) {\n  const [recommendation, setRecommendation] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // WARNING: This is a fake key for demo. Do NOT expose real keys.\n  const OPENAI_API_KEY = \"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\";\n\n  const getRecommendation = async () => {\n    setLoading(true);\n    setRecommendation('');\n\n    // Build your user prompt\n    const userSpecificPrompt = `\nActúa como un experto en cuidado capilar.\nTenemos varios productos (Mascarilla Hidratante, Aceite Amplificador, Shampoo Equilibrium, etc.).\nEl usuario tiene:\n  - Tipo de cabello: ${formData.tipoCabello}\n  - Condición general: ${formData.condicionGeneral}\n  - Frecuencia de lavado: ${formData.frecuenciaLavado}\n  (y más datos si necesitas)\n\nBasado en esta info, dame la recomendación más adecuada en 2-3 oraciones.\nExplica brevemente por qué esos productos se ajustan a su perfil.\n    `;\n\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${OPENAI_API_KEY}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [\n            {\n              role: 'system',\n              content: 'Eres un experto asesor de cuidado capilar. Responde de manera clara y breve.'\n            },\n            {\n              role: 'user',\n              content: userSpecificPrompt\n            }\n          ],\n          max_tokens: 200,\n          temperature: 0.7\n        })\n      });\n\n      const data = await response.json();\n      const aiText = data?.choices?.[0]?.message?.content || \"No recommendation found.\";\n      setRecommendation(aiText);\n    } catch (error) {\n      console.error(error);\n      setRecommendation(\"Error generando la recomendación.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ marginTop: '1rem' }}>\n      <button onClick={getRecommendation}>Obtener Recomendación IA</button>\n\n      {loading && <p>Cargando...</p>}\n\n      {recommendation && (\n        <div>\n          <h3>Recomendación IA:</h3>\n          <p>{recommendation}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AIRecommender;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}