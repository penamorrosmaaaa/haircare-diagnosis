{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpenamorros/franciscoiglesias.cuestionario/client/src/components/FinalScreen.js\";\n// FinalScreen.jsx\nimport React from 'react';\nimport ProductCard from './ProductCard';\n\n// EJEMPLO de lista de productos (simplificada)\n// Ajusta a tu versión bilingüe o la que ya tenías\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst productList = [{\n  name: \"Mascarilla Hidratante\",\n  description: \"Repara y humecta el cabello seco o rizado de forma intensa.\",\n  mainBenefit: \"Previene la rotura\",\n  secondaryBenefits: \"Sella la cutícula, repara daños, restaura elasticidad, combate el frizz.\"\n}, {\n  name: \"Aceite Amplificador\",\n  description: \"Aceite ligero que nutre, protege del calor y aporta brillo.\",\n  mainBenefit: \"Aceite ligero y lujoso\",\n  secondaryBenefits: \"Penetra la fibra, reduce tiempo de secado, evita apelmazar.\"\n}\n// ... resto de productos\n];\n\n// Busca producto por nombre (ajusta al naming que uses)\nfunction getProductByName(name) {\n  return productList.find(p => p.name === name);\n}\nfunction FinalScreen({\n  formData,\n  language\n}) {\n  // Lógica de recomendación con razones\n  const getRecommendations = data => {\n    const recs = [];\n\n    // Ejemplo: Si es seco/quebradizo\n    if (data.condicionGeneral === 'seco-quebradizo') {\n      recs.push({\n        product: getProductByName('Mascarilla Hidratante'),\n        reason: \"Porque tu cabello es seco/quebradizo y necesita hidratación intensa.\"\n      });\n      recs.push({\n        product: getProductByName('Aceite Amplificador'),\n        reason: \"Ayuda a sellar la humedad y proteger el cabello frágil.\"\n      });\n    }\n\n    // ...más reglas y razones\n\n    // Eliminar duplicados\n    const unique = new Map();\n    for (const item of recs) {\n      if (!unique.has(item.product.name)) {\n        unique.set(item.product.name, item);\n      }\n    }\n    return Array.from(unique.values());\n  };\n  const recommendations = getRecommendations(formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"final-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: language === 'es' ? `¡Gracias, ${formData.nombre || 'Usuario'}!` : `Thank you, ${formData.nombre || 'User'}!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: language === 'es' ? 'Basado en tus respuestas, te recomendamos:' : 'Based on your answers, we recommend:'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"final-screen__cards-container\",\n      children: recommendations.map(({\n        product,\n        reason\n      }, idx) => /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: product,\n        reason: reason,\n        language: language\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c = FinalScreen;\nexport default FinalScreen;\nvar _c;\n$RefreshReg$(_c, \"FinalScreen\");","map":{"version":3,"names":["React","ProductCard","jsxDEV","_jsxDEV","productList","name","description","mainBenefit","secondaryBenefits","getProductByName","find","p","FinalScreen","formData","language","getRecommendations","data","recs","condicionGeneral","push","product","reason","unique","Map","item","has","set","Array","from","values","recommendations","className","children","nombre","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","_c","$RefreshReg$"],"sources":["/Users/manuelpenamorros/franciscoiglesias.cuestionario/client/src/components/FinalScreen.js"],"sourcesContent":["// FinalScreen.jsx\nimport React from 'react';\nimport ProductCard from './ProductCard';\n\n// EJEMPLO de lista de productos (simplificada)\n// Ajusta a tu versión bilingüe o la que ya tenías\nconst productList = [\n  {\n    name: \"Mascarilla Hidratante\",\n    description: \"Repara y humecta el cabello seco o rizado de forma intensa.\",\n    mainBenefit: \"Previene la rotura\",\n    secondaryBenefits: \"Sella la cutícula, repara daños, restaura elasticidad, combate el frizz.\",\n  },\n  {\n    name: \"Aceite Amplificador\",\n    description: \"Aceite ligero que nutre, protege del calor y aporta brillo.\",\n    mainBenefit: \"Aceite ligero y lujoso\",\n    secondaryBenefits: \"Penetra la fibra, reduce tiempo de secado, evita apelmazar.\",\n  },\n  // ... resto de productos\n];\n\n// Busca producto por nombre (ajusta al naming que uses)\nfunction getProductByName(name) {\n  return productList.find(p => p.name === name);\n}\n\nfunction FinalScreen({ formData, language }) {\n  // Lógica de recomendación con razones\n  const getRecommendations = data => {\n    const recs = [];\n\n    // Ejemplo: Si es seco/quebradizo\n    if (data.condicionGeneral === 'seco-quebradizo') {\n      recs.push({\n        product: getProductByName('Mascarilla Hidratante'),\n        reason: \"Porque tu cabello es seco/quebradizo y necesita hidratación intensa.\",\n      });\n      recs.push({\n        product: getProductByName('Aceite Amplificador'),\n        reason: \"Ayuda a sellar la humedad y proteger el cabello frágil.\",\n      });\n    }\n\n    // ...más reglas y razones\n\n    // Eliminar duplicados\n    const unique = new Map();\n    for (const item of recs) {\n      if (!unique.has(item.product.name)) {\n        unique.set(item.product.name, item);\n      }\n    }\n    return Array.from(unique.values());\n  };\n\n  const recommendations = getRecommendations(formData);\n\n  return (\n    <div className=\"final-screen\">\n      <h1>\n        {language === 'es'\n          ? `¡Gracias, ${formData.nombre || 'Usuario'}!`\n          : `Thank you, ${formData.nombre || 'User'}!`}\n      </h1>\n      <p>\n        {language === 'es'\n          ? 'Basado en tus respuestas, te recomendamos:'\n          : 'Based on your answers, we recommend:'}\n      </p>\n\n      {/* Contenedor que organiza las tarjetas en fila */}\n      <div className=\"final-screen__cards-container\">\n        {recommendations.map(({ product, reason }, idx) => (\n          <ProductCard\n            key={idx}\n            product={product}\n            reason={reason}\n            language={language}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FinalScreen;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,CAClB;EACEC,IAAI,EAAE,uBAAuB;EAC7BC,WAAW,EAAE,6DAA6D;EAC1EC,WAAW,EAAE,oBAAoB;EACjCC,iBAAiB,EAAE;AACrB,CAAC,EACD;EACEH,IAAI,EAAE,qBAAqB;EAC3BC,WAAW,EAAE,6DAA6D;EAC1EC,WAAW,EAAE,wBAAwB;EACrCC,iBAAiB,EAAE;AACrB;AACA;AAAA,CACD;;AAED;AACA,SAASC,gBAAgBA,CAACJ,IAAI,EAAE;EAC9B,OAAOD,WAAW,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACN,IAAI,KAAKA,IAAI,CAAC;AAC/C;AAEA,SAASO,WAAWA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAC3C;EACA,MAAMC,kBAAkB,GAAGC,IAAI,IAAI;IACjC,MAAMC,IAAI,GAAG,EAAE;;IAEf;IACA,IAAID,IAAI,CAACE,gBAAgB,KAAK,iBAAiB,EAAE;MAC/CD,IAAI,CAACE,IAAI,CAAC;QACRC,OAAO,EAAEX,gBAAgB,CAAC,uBAAuB,CAAC;QAClDY,MAAM,EAAE;MACV,CAAC,CAAC;MACFJ,IAAI,CAACE,IAAI,CAAC;QACRC,OAAO,EAAEX,gBAAgB,CAAC,qBAAqB,CAAC;QAChDY,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;;IAEA;;IAEA;IACA,MAAMC,MAAM,GAAG,IAAIC,GAAG,CAAC,CAAC;IACxB,KAAK,MAAMC,IAAI,IAAIP,IAAI,EAAE;MACvB,IAAI,CAACK,MAAM,CAACG,GAAG,CAACD,IAAI,CAACJ,OAAO,CAACf,IAAI,CAAC,EAAE;QAClCiB,MAAM,CAACI,GAAG,CAACF,IAAI,CAACJ,OAAO,CAACf,IAAI,EAAEmB,IAAI,CAAC;MACrC;IACF;IACA,OAAOG,KAAK,CAACC,IAAI,CAACN,MAAM,CAACO,MAAM,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,eAAe,GAAGf,kBAAkB,CAACF,QAAQ,CAAC;EAEpD,oBACEV,OAAA;IAAK4B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3B7B,OAAA;MAAA6B,QAAA,EACGlB,QAAQ,KAAK,IAAI,GACd,aAAaD,QAAQ,CAACoB,MAAM,IAAI,SAAS,GAAG,GAC5C,cAAcpB,QAAQ,CAACoB,MAAM,IAAI,MAAM;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACLlC,OAAA;MAAA6B,QAAA,EACGlB,QAAQ,KAAK,IAAI,GACd,4CAA4C,GAC5C;IAAsC;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eAGJlC,OAAA;MAAK4B,SAAS,EAAC,+BAA+B;MAAAC,QAAA,EAC3CF,eAAe,CAACQ,GAAG,CAAC,CAAC;QAAElB,OAAO;QAAEC;MAAO,CAAC,EAAEkB,GAAG,kBAC5CpC,OAAA,CAACF,WAAW;QAEVmB,OAAO,EAAEA,OAAQ;QACjBC,MAAM,EAAEA,MAAO;QACfP,QAAQ,EAAEA;MAAS,GAHdyB,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIT,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACG,EAAA,GAzDQ5B,WAAW;AA2DpB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}