{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpenamorros/franciscoiglesias.cuestionario/src/components/Questionnaire.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport questionsData from './questionsData'; // renamed import\nimport AIRecommender from './AIRecommender';\nimport FinalScreen from './FinalScreen';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Questionnaire({\n  language\n}) {\n  _s();\n  const [formData, setFormData] = useState({});\n  const [step, setStep] = useState(0); // track which question index\n  const [showResult, setShowResult] = useState(false);\n  const currentQuestion = questionsData[step];\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === 'checkbox') {\n      // For checkbox groups\n      let currentVals = formData[name] || [];\n      if (checked) {\n        // add\n        currentVals.push(value);\n      } else {\n        // remove\n        currentVals = currentVals.filter(val => val !== value);\n      }\n      setFormData({\n        ...formData,\n        [name]: currentVals\n      });\n    } else {\n      // for select or text\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const nextQuestion = () => {\n    if (step < questionsData.length - 1) {\n      setStep(step + 1);\n    } else {\n      // end\n      setShowResult(true);\n    }\n  };\n\n  // If finished all questions, show the final screen + AI\n  if (showResult) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FinalScreen, {\n        formData: formData,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AIRecommender, {\n        formData: formData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render the current question\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '1rem',\n      backgroundColor: 'rgba(255, 255, 255, 0.8)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: language === 'es' ? 'Cuestionario de Cuidado Capilar' : 'Haircare Questionnaire'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: currentQuestion.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), currentQuestion.type === 'select' && /*#__PURE__*/_jsxDEV(\"select\", {\n      name: currentQuestion.name,\n      value: formData[currentQuestion.name] || \"\",\n      onChange: handleChange,\n      required: currentQuestion.required,\n      children: currentQuestion.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: opt.value,\n        disabled: opt.disabled,\n        children: opt.label\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), currentQuestion.type === 'checkboxGroup' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: currentQuestion.options.map((opt, idx) => {\n        const checkedVals = formData[currentQuestion.name] || [];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: currentQuestion.name,\n              value: opt.value,\n              checked: checkedVals.includes(opt.value),\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), opt.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '1rem'\n      },\n      onClick: nextQuestion,\n      children: step < questionsData.length - 1 ? language === 'es' ? 'Siguiente' : 'Next' : language === 'es' ? 'Ver Resultados' : 'See Results'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Questionnaire, \"2d+QExgPehx2ypHllkd+zQCSvqs=\");\n_c = Questionnaire;\nexport default Questionnaire;\nvar _c;\n$RefreshReg$(_c, \"Questionnaire\");","map":{"version":3,"names":["React","useState","questionsData","AIRecommender","FinalScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","Questionnaire","language","_s","formData","setFormData","step","setStep","showResult","setShowResult","currentQuestion","handleChange","e","name","value","type","checked","target","currentVals","push","filter","val","nextQuestion","length","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","backgroundColor","question","onChange","required","options","map","opt","idx","disabled","label","checkedVals","includes","marginTop","onClick","_c","$RefreshReg$"],"sources":["/Users/manuelpenamorros/franciscoiglesias.cuestionario/src/components/Questionnaire.js"],"sourcesContent":["import React, { useState } from 'react';\nimport questionsData from './questionsData'; // renamed import\nimport AIRecommender from './AIRecommender';\nimport FinalScreen from './FinalScreen';\n\nfunction Questionnaire({ language }) {\n  const [formData, setFormData] = useState({});\n  const [step, setStep] = useState(0); // track which question index\n  const [showResult, setShowResult] = useState(false);\n\n  const currentQuestion = questionsData[step];\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    \n    if (type === 'checkbox') {\n      // For checkbox groups\n      let currentVals = formData[name] || [];\n      if (checked) {\n        // add\n        currentVals.push(value);\n      } else {\n        // remove\n        currentVals = currentVals.filter((val) => val !== value);\n      }\n      setFormData({ ...formData, [name]: currentVals });\n    } else {\n      // for select or text\n      setFormData({ ...formData, [name]: value });\n    }\n  };\n\n  const nextQuestion = () => {\n    if (step < questionsData.length - 1) {\n      setStep(step + 1);\n    } else {\n      // end\n      setShowResult(true);\n    }\n  };\n\n  // If finished all questions, show the final screen + AI\n  if (showResult) {\n    return (\n      <div>\n        <FinalScreen formData={formData} language={language} />\n        <AIRecommender formData={formData} />\n      </div>\n    );\n  }\n\n  // Render the current question\n  return (\n    <div style={{ padding: '1rem', backgroundColor: 'rgba(255, 255, 255, 0.8)' }}>\n      <h2>{language === 'es' ? 'Cuestionario de Cuidado Capilar' : 'Haircare Questionnaire'}</h2>\n      <h3>{currentQuestion.question}</h3>\n\n      {/* A simple switch: select or checkboxGroup */}\n      {currentQuestion.type === 'select' && (\n        <select\n          name={currentQuestion.name}\n          value={formData[currentQuestion.name] || \"\"}\n          onChange={handleChange}\n          required={currentQuestion.required}\n        >\n          {currentQuestion.options.map((opt, idx) => (\n            <option key={idx} value={opt.value} disabled={opt.disabled}>\n              {opt.label}\n            </option>\n          ))}\n        </select>\n      )}\n\n      {currentQuestion.type === 'checkboxGroup' && (\n        <>\n          {currentQuestion.options.map((opt, idx) => {\n            const checkedVals = formData[currentQuestion.name] || [];\n            return (\n              <div key={idx}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    name={currentQuestion.name}\n                    value={opt.value}\n                    checked={checkedVals.includes(opt.value)}\n                    onChange={handleChange}\n                  />\n                  {opt.label}\n                </label>\n              </div>\n            );\n          })}\n        </>\n      )}\n\n      <br />\n      <button style={{ marginTop: '1rem' }} onClick={nextQuestion}>\n        {step < questionsData.length - 1\n          ? language === 'es' ? 'Siguiente' : 'Next'\n          : language === 'es' ? 'Ver Resultados' : 'See Results'}\n      </button>\n    </div>\n  );\n}\n\nexport default Questionnaire;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}